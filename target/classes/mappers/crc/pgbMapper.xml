<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tad.crc.dao.pgbDao">

	<select id="pgbCenterListSelect" resultType="pgbVo">
		SELECT center_seq
		     , center_name 
		  FROM tb_center
		 ORDER BY center_name
	</select>

	<select id="pgbClassListSelect" resultType="pgbVo">
		SELECT class_seq
		     , class_name
		  FROM tb_class
		 ORDER BY class_name
	</select>
	
	<select id="pgbDomainListSelect" resultType="pgbVo">
		SELECT domain_seq
		     , domain_name
		  FROM tb_domain
		 WHERE domain_tp_cd = 'TMP'
		   AND domain_use_yn = 'Y'
		   AND del_yn = 'N'
	</select>

	<select id="pgbMemberListSelect" resultType="pgbVo">
		SELECT member_seq
		     , member_name
		     , member_email
		     , member_cp
		  FROM tb_member
		 WHERE member_auth_cd != 'master'
		   AND approval_yn = 'Y'
	</select>

	<select id="pgbStudentListSelect" parameterType="pgbVo" resultType="pgbVo">
		SELECT *
		FROM (SELECT @ROWNUM := @ROWNUM + 1 AS rownum
		           , AA.*
		      FROM (
		               SELECT A.center_name
		                    , B.class_name
		                    , C.student_seq
		                    , C.student_name
		                    , DATE_FORMAT(C.student_birth, '%Y-%m-%d') AS student_birth
		                    , TIMESTAMPDIFF(MONTH, DATE_FORMAT(C.student_birth, '%Y-%m-%d'),
		                                    DATE_FORMAT(current_timestamp(), '%Y-%m-%d')) AS month_of_birth
		                    , IFNULL((SELECT COUNT(student_seq) AS cnt
		                              FROM tb_domain
		                              WHERE student_seq = C.student_seq
		                                AND del_yn = 'N'
		                              GROUP BY student_seq), 0) AS domain_cnt
		               FROM tb_center A
		                        LEFT OUTER JOIN tb_class B ON A.center_seq = B.center_seq
		                        LEFT OUTER JOIN tb_student C ON B.class_seq = C.class_seq
		               WHERE C.student_seq IS NOT NULL
		             <if test="searchField1 != null and searchField1 != ''">
						AND A.center_seq = #{searchField1 }
					 </if>
					 <if test="searchField2 != null and searchField2 != ''">
						AND B.class_seq = #{searchField2 }
					 </if>
					 <if test="searchText1 != null and searchText1 != ''">
						AND C.student_name LIKE CONCAT('%',#{searchText1},'%')
					 </if>
		               ORDER BY C.student_seq DESC
		           ) AA,
		           (SELECT @ROWNUM := 0) rn
		      ) sub
		ORDER BY sub.rownum
	</select>
	
	<select id="pgbLTOCntSelect" parameterType="pgbVo" resultType="pgbVo">
		SELECT IFNULL(COUNT(1), 0) AS total_lto_cnt
		     , IFNULL(COUNT(CASE WHEN tl.lto_status = 'CMP' THEN 1 END), 0) AS total_comple_lto_cnt
		FROM tb_lto tl
		WHERE tl.domain_seq IN (SELECT domain_seq FROM tb_domain WHERE student_seq = #{studentSeq })
	</select>
	
	<select id="pgbLTOCardListSelect" parameterType="pgbVo" resultType="pgbVo">
		SELECT *
		FROM (
		         SELECT @ROWNUM := @ROWNUM + 1 AS rownum
		              , td.domain_seq
		              , td.member_seq
		              , (SELECT member_name FROM tb_member where member_seq = td.member_seq) AS member_name
		              , td.domain_status
		              , td.domain_name
		              , IFNULL((SELECT COUNT(domain_seq) AS cnt
		                        FROM tb_lto
		                        WHERE domain_seq = td.domain_seq
		                          AND del_yn = 'N'
		                        GROUP BY domain_seq), 0) AS lto_cnt
		              , IFNULL((SELECT COUNT(domain_seq) AS cnt
		                        FROM tb_lto
		                        WHERE domain_seq = td.domain_seq
		                          AND lto_status = 'CMP'
		                          AND del_yn = 'N'
		                        GROUP BY domain_seq), 0) AS comple_lto_cnt
		         FROM tb_domain td,
		              (SELECT @ROWNUM := 0) rn
		         WHERE student_seq = #{studentSeq }
		           AND del_yn = 'N'
		         ORDER BY domain_reg_dt DESC ) sub
		ORDER BY sub.rownum
	</select>
	
	<select id="pgbTmpDomainSeqSelect" parameterType="pgbVo" resultType="pgbVo">
		SELECT domain_seq  
		  FROM tb_domain
		 WHERE domain_tp_cd = 'TMP'
		   AND domain_use_yn = 'Y'
		   AND del_yn = 'N'
	</select>
	
	<insert id="pgbDomainInsert" parameterType="pgbVo" useGeneratedKeys="true" keyProperty="domainSeq">
		INSERT INTO tb_domain(student_seq, member_seq, domain_tp_cd, domain_status, domain_name, domain_contents)
		SELECT #{studentSeq }
		     , #{memberSeq }
		     , 'USR'
		     , domain_status
		     , domain_name
		     , domain_contents
		  FROM tb_domain
		 WHERE domain_tp_cd = 'TMP'
		   AND domain_use_yn = 'Y'
		   AND del_yn = 'N'
		   AND domain_seq = #{domainSeq }
	</insert>
	
	<insert id="pgbLTOInsert" parameterType="pgbVo">
		INSERT INTO tb_lto (domain_seq, lto_status, lto_name, lto_contents, lto_arr_tp_cd)
		SELECT #{domainSeq }
		     , lto_status
		     , lto_name
		     , lto_contents
		     , lto_arr_tp_cd
		  FROM tb_lto
		 WHERE del_yn = 'N'
		   AND domain_seq = #{oldDomainSeq }
	</insert>
	
	<select id="pgbManagerUpdate" parameterType="pgbVo">
		UPDATE tb_domain 
		   SET member_seq = #{memberSeq } 
		 WHERE domain_seq = #{domainSeq }
		   
	</select>
	
	<select id="pgbDomainDelete" parameterType="pgbVo">
		UPDATE tb_domain 
		   SET del_yn = 'Y'
		 WHERE domain_seq = #{domainSeq }
		   
	</select>
</mapper>
		
		
