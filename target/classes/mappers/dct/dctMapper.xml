<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tad.dct.dao.dctDao">

	<select id="dctCenterListSelect" parameterType="dctVo" resultType="dctVo">
		SELECT * 
		  FROM tb_center
	</select>
	
	<select id="dctCenterInsert" parameterType="dctVo">
		INSERT INTO tb_center(center_name)
		VALUES(#{centerName } )
	</select>
	
	<select id="dctCenterUpdate" parameterType="dctVo">
		UPDATE tb_center
		   SET center_name = #{centerName }
		 WHERE center_seq = #{centerSeq }
	</select>
	
	<select id="dctCenterDelete" parameterType="dctVo">
		DELETE FROM tb_center
		 WHERE center_seq = #{centerSeq }
	</select>

	<select id="dctClassListSelect" parameterType="dctVo" resultType="dctVo">
		SELECT * 
		  FROM tb_class
		 WHERE center_seq = #{centerSeq }
	</select>
	
	<select id="dctClassInsert" parameterType="dctVo">
		INSERT INTO tb_class(center_seq, class_name)
		VALUES(#{centerSeq }, #{className } )
	</select>
	
	<select id="dctClassUpdate" parameterType="dctVo">
		UPDATE tb_class
		   SET class_name = #{className }
		 WHERE class_seq = #{classSeq }
	</select>
	
	<select id="dctClassDelete" parameterType="dctVo">
		DELETE FROM tb_class
		 WHERE class_seq = #{classSeq }
	</select>
	
	<select id="dctStudentListSelect" parameterType="dctVo" resultType="dctVo">
		SELECT * 
		  FROM tb_student
		 WHERE class_seq = #{classSeq }
	</select>
	
	<select id="dctStudentOneSelect" parameterType="dctVo" resultType="dctVo">
		SELECT student_seq
		     , class_seq
		     , student_name
		     , DATE_FORMAT(student_birth, '%Y-%m-%d') AS student_birth
		     , student_etc
		     , DATE_FORMAT(student_start_dt, '%Y-%m-%d') AS student_start_dt
		     , DATE_FORMAT(student_end_dt, '%Y-%m-%d') AS student_end_dt
		     , DATE_FORMAT(student_reg_dt, '%Y-%m-%d') AS student_reg_dt
		     , parent_name
		  FROM tb_student
		 WHERE student_seq = #{studentSeq }
	</select>
	
	<insert id="dctStudentInsert" parameterType="dctVo">
		INSERT INTO tb_student (
			class_seq, 
			student_name, 
			student_birth, 
			student_etc, 
			student_start_dt, 
			student_end_dt,
			parent_name
		)
		VALUES (
			#{classSeq }, 
			#{studentName }, 
			STR_TO_DATE(#{studentBirth }, '%Y-%m-%d') , 
			#{studentEtc }, 
			STR_TO_DATE(#{studentStartDt }, '%Y-%m-%d') , 
			STR_TO_DATE(#{studentEndDt }, '%Y-%m-%d') , 
			#{parentName }
		)
		
		<selectKey keyProperty="studentSeq" resultType="Integer" order="AFTER">
			SELECT LAST_INSERT_ID();
		</selectKey>
	</insert>
	
	<select id="dctStudentUpdate" parameterType="dctVo">
		UPDATE tb_student
		   SET student_name 	= #{studentName }
		     , student_birth 	= STR_TO_DATE(#{studentBirth }, '%Y-%m-%d') 
		     , student_etc 		= #{studentEtc }
		     , student_start_dt = STR_TO_DATE(#{studentStartDt }, '%Y-%m-%d')
		     , student_end_dt 	= STR_TO_DATE(#{studentEndDt }, '%Y-%m-%d')
		     , parent_name 		= #{parentName }
		 WHERE student_seq = #{studentSeq }
	</select>
	
	<select id="dctStudentDelete" parameterType="dctVo">
		DELETE FROM tb_student
		 WHERE student_seq = #{studentSeq }
	</select>
	
	<select id="dctDomainSeqListSelect" parameterType="dctVo" resultType="dctVo">
		SELECT domain_seq
		  FROM tb_domain 
		 WHERE student_seq = #{studentSeq }
		   AND del_yn = 'N'
		 ORDER BY domain_seq DESC
	</select>
	
	<select id="dctCurriculumListSelect" parameterType="dctVo" resultType="dctVo">
		SELECT td.domain_seq
		     , td.domain_name
		     , td.domain_status
		     , tl.lto_seq
		     , tl.lto_name
		     , tl.lto_status
		  FROM tb_domain td
		  LEFT OUTER JOIN tb_lto tl ON td.domain_seq = tl.domain_seq AND tl.del_yn = 'N'
		 WHERE td.student_seq = #{studentSeq }
		   AND td.del_yn = 'N'
		 ORDER BY td.domain_seq DESC
	</select>
	
	<select id="dctCompletionListSelect" parameterType="dctVo" resultType="dctVo">
		SELECT *
		  FROM (
				SELECT @ROWNUM := @ROWNUM + 1 AS rownum
				     , td.domain_name AS domain_name
				     , tl.lto_name AS lto_name
				     , ts.sto_name AS sto_name
				     , ts.sto_arr_dt AS sto_arr_dt
				  FROM (SELECT @ROWNUM := 0 ) rn, tb_domain td 
				  LEFT OUTER JOIN tb_lto tl ON td.domain_seq = tl.domain_seq 
				  LEFT OUTER JOIN tb_sto ts ON tl.lto_seq  = ts.lto_seq 
				 WHERE td.student_seq = #{studentSeq }
				   AND ts.sto_arr_yn = 'Y'
				   <if test="startDt != null and startDt !=''">
				    	<if test="endDt != null and endDt !=''">
					   	AND ( date(ts.sto_arr_dt) between #{startDt } and #{endDt } )
					   </if>
				   </if>
				) sub
		 ORDER BY sub.rownum DESC
	</select>
	
	<select id="dctRunUnitListSelect" parameterType="dctChartVo" resultType="dctChartVo">
		SELECT * FROM (
			SELECT
				date_format(tp.point_reg_dt, '%Y-%m-%d') as dtm
				, td.domain_seq
				, td.domain_name 
				, SUM(1) AS tot_cnt
				, SUM(CASE WHEN tp.point_rslt_cd='+' THEN 1 ELSE 0 END) AS cmp_cnt
				, SUM(CASE WHEN tp.point_rslt_cd='P' THEN 1 ELSE 0 END) AS urg_cnt
				, SUM(CASE WHEN tp.point_rslt_cd='-' THEN 1 ELSE 0 END) AS fai_cnt
			FROM tb_domain td
			LEFT OUTER JOIN tb_lto tl ON td.domain_seq = tl.domain_seq  
			LEFT OUTER JOIN tb_sto ts ON tl.lto_seq = ts.lto_seq 
			LEFT OUTER JOIN tb_point tp ON ts.sto_seq = tp.sto_seq 
			WHERE student_seq = #{studentSeq }
			GROUP BY date_format(tp.point_reg_dt, '%Y-%m-%d'), td.domain_seq 
		) AS sub
		WHERE sub.dtm IS NOT NULL
		AND sub.dtm BETWEEN #{startDt } AND #{endDt }
		ORDER BY sub.dtm ASC, sub.domain_seq DESC
	</select>
	
	<select id="dctCriteriaListSelect" parameterType="dctChartVo" resultType="dctChartVo">
		SELECT DATE_FORMAT(DATE_SUB(main.dtm, INTERVAL (DAYOFWEEK(main.dtm)-1) DAY), '%Y-%m/%d') as week_start,
		       DATE_FORMAT(DATE_SUB(main.dtm, INTERVAL (DAYOFWEEK(main.dtm)-7) DAY), '%Y-%m-%d') as week_end,
		       DATE_FORMAT(main.dtm, '%Y%U') AS week_seq, 
		       IFNULL(SUM(main.point_cnt), 0) AS rununit,
		       IFNULL(SUM(main.arr_cnt), 0) AS arrCnt,
		       IFNULL(ROUND(SUM(main.point_cnt) / SUM(main.arr_cnt)), 0) AS criterion
		  FROM (
			SELECT STR_TO_DATE(sub1.dtm, '%Y-%m-%d %H:%i%S') dtm,
				   sub2.point_cnt,
				   sub3.arr_cnt
			FROM (
				SELECT DATE_FORMAT(DATE_ADD(#{startDt }, INTERVAL seq - 1 DAY), '%Y-%m-%d') AS dtm 	
				  FROM (SELECT @num := @num + 1 AS seq
						  FROM information_schema.tables a
							 , information_schema.tables b
							 , (SELECT @num := 0) c ) T
				 WHERE seq <![CDATA[<=]]>  DATEDIFF(#{endDt }, #{startDt }) + 1	
			) sub1
			LEFT OUTER JOIN (
				SELECT * FROM (
					SELECT
						date_format(tp.point_reg_dt, '%Y-%m-%d') as dtm,
						COUNT(td.domain_seq) as point_cnt
					FROM tb_domain td
					LEFT OUTER JOIN tb_lto tl ON td.domain_seq = tl.domain_seq  
					LEFT OUTER JOIN tb_sto ts ON tl.lto_seq = ts.lto_seq 
					LEFT OUTER JOIN tb_point tp ON ts.sto_seq = tp.sto_seq 
					WHERE student_seq = #{studentSeq }
					<if test="domainSeq != null and domainSeq !=''">
						AND td.domain_seq = #{domainSeq }	
					</if>
					GROUP BY date_format(tp.point_reg_dt, '%Y-%m-%d')
				) AS sub
				WHERE sub.dtm IS NOT NULL
				ORDER BY sub.dtm
			) sub2 on sub1.dtm = sub2.dtm 
			LEFT OUTER JOIN (
				SELECT * FROM (
					SELECT
						date_format(ts.sto_arr_dt, '%Y-%m-%d') as dtm,
						COUNT(td.domain_seq) as arr_cnt
					FROM tb_domain td
					LEFT OUTER JOIN tb_lto tl ON td.domain_seq = tl.domain_seq  
					LEFT OUTER JOIN tb_sto ts ON tl.lto_seq = ts.lto_seq and ts.sto_arr_yn = 'Y'
					WHERE student_seq = #{studentSeq }
					<if test="domainSeq != null and domainSeq !=''">
						AND td.domain_seq = #{domainSeq }	
					</if>
					GROUP BY date_format(ts.sto_arr_dt, '%Y-%m-%d')
				) AS sub
				WHERE sub.dtm IS NOT NULL
				ORDER BY sub.dtm
			) sub3 on sub1.dtm = sub3.dtm 
		) main
		 GROUP BY week_seq;
	</select>
	
	<select id="dctDomainSelect" parameterType="dctVo" resultType="dctChartVo">
		SELECT domain_seq, 
			   domain_name
		  FROM tb_domain
		 WHERE student_seq = #{studentSeq }
		   AND del_yn = 'N'
		 ORDER BY domain_seq DESC
	</select>
	
	<select id="dctDatePickerDelete" parameterType="dctChartVo">
		DELETE FROM tb_picker
		 WHERE picker_dv_cd = 'dto'
		   AND picker_selector = #{pickerSelector }
		   AND picker_target = #{pickerTarget }
	</select>
	
	<select id="dctDatePickerInsert" parameterType="dctChartVo">
		INSERT INTO tb_picker (picker_dv_cd, picker_selector, picker_target, picker_dt)
		SELECT 'dto',
				#{pickerSelector },
				#{pickerTarget },
				#{pickerDt }
		  FROM DUAL
		 WHERE NOT EXISTS (
		 	SELECT * 
		 	  FROM tb_picker
			 WHERE picker_dv_cd = 'dto'
			   AND picker_selector = #{pickerSelector }
			   AND picker_target = #{pickerTarget }
			   AND picker_dt = #{pickerDt }
		 )
	</select>
	
	<select id="dctDatePickerSelect" parameterType="dctChartVo" resultType="dctChartVo">
		SELECT * 
		  FROM tb_picker
		 WHERE picker_dv_cd = 'dto'
		   AND picker_selector = #{pickerSelector }
		   AND picker_target = #{pickerTarget }
		 ORDER BY picker_dt ASC
	</select>
	
	<select id="dctDomainChartDataSelect" parameterType="dctChartVo" resultType="dctChartVo">
		SELECT
			td.domain_seq, 
			td.domain_name, 
			COUNT(tl.lto_seq) as cmp_lto_cnt,
			#{pickerDt } as picker_dt
		  FROM tb_domain td
		  LEFT OUTER JOIN (
			   SELECT * 
			     FROM tb_lto 
		        WHERE lto_status = 'CMP'
			      AND date_format(lto_arr_dt, '%Y-%m-%d') <![CDATA[<=]]> #{pickerDt }
		       ) tl ON td.domain_seq = tl.domain_seq 
		 WHERE td.student_seq = #{studentSeq }
		   AND td.del_yn = 'N'
		 GROUP BY td.domain_seq
		 ORDER BY td.domain_seq DESC
	</select>
</mapper>